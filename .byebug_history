quit
moves
quit
@valid_moves
moves
quit
moves
quit
moves
quit
moves
moves.delete(["ðŸ˜’"])
moves
quit
moves
quit
moves
quit
moves
quit
moves
quit
moves
quit
moves
quit
JSON.parse(parent_socket.recv(100))
quit
parent_socket.recv(100)
quit
parent_socket.recv(100)
quit
parent_socket.recv
parent_socket.recv(1000000)
parent_socket.recv(100)
[arent_socket.recv(100)
quit
parent_socket.recv(100)
quit
parent_socket.recv(100)
quit
parent_socket.recv(1000000)
quit
parent_socket.recv(100000000)
parent_socket.recv(10)
parent_socket.recv(0)
parent_socket.recv(100)
quit
parent_socket.recv(100)
parent_socket
moves
quit
@valid_moves
quit
@valid_moves
quit
@valid_moves
q
n
spaces
n
spaces
n
spaces
n
spaces
n
space
spaces
n
spaces
space
quit
n
find_king(opposing_color).pos
find_king(opposing_color)
opposing_color
quit
starting_pos
n
starting_pos
target_pos
quit
n
quit
board[starting_pos].moves(board)
board[starting_pos].valid_moves(board)
board[starting_pos].valid_moves
board[starting_pos]
starting_pos
n
quit
y
quit
n
s
n
quit
n
@pos
@type
quit
n
@type
n
@type
quit
n
starting_pos
@pos
@type
quit
@pos
@type
quit
possible_moves
s
@move_dirs
quit
@board[[i, j]].valid_moves(@board)
@board[[i, j]].valid_moves
@board[[i, j]]
exit
s
pos
